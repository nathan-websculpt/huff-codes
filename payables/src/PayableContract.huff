#define function payMe() payable returns ()

#define error Error(string)

#define macro MAIN() = takes(0) returns(0) {
    0x00 calldataload 0xE0 shr

    dup1 __FUNC_SIG(payMe) eq payMeJump jumpi

    0x00 0x00 revert

    payMeJump:
        PAY_ME()
}

#define macro PAY_ME() = takes(0) returns(0) {
    // 0x4d696e696d756d207061796d656e7420616d6f756e74206e6f74206d65742e // ["Minimum payment amount not met."]
    __RIGHTPAD(0x4d696e696d756d207061796d656e7420616d6f756e74206e6f74206d65742e)
    0x20
    callvalue 
    iszero iszero
    REQUIRE()
}

// Input stack:          [condition, message_length, message]
#define macro REQUIRE() = takes (3) returns (0) {
    do_not_throw jumpi        // [message_length, message]

    __ERROR(Error)        // [error_selector, message_length, message]
    0x00                  // [mem_ptr, error_selector, message_length, message]
    mstore                // [message_length, message]
    0x20                  // [message_offset, message_length, message]
    0x04                  // [message_offset_ptr, message_offset, message_length, message]
    mstore                // [message_length, message]
    0x24                  // [message_length_ptr, message_length, message]
    mstore                // [message]
    0x44                  // [message_ptr, message]
    mstore                // []

    0x64                  // [size]
    0x00                  // [offset, size]
    revert

    do_not_throw:         // [message_length, message]
        pop               // [message]   
        pop               // []
}